<Application x:Class="MailOffice.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="/View/MainWindow.xaml">
    <Application.Resources>
        <!-- Стиль для Window 
           1. Используется для Главного окна приложения
        -->
        <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">  
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#171d25"/>
            <Setter Property="ResizeMode" Value="CanResize"/>
            <Setter Property="Height"     Value="800"/>
            <Setter Property="Width"      Value="1500"/>
        </Style>

        <!-- 
           2. Используется для Окон аутентификации
        -->
        <Style x:Key="AuthenticationWindowStyle" TargetType="{x:Type Window}"> 
            <Setter Property="Foreground"  Value="White"/>
            <Setter Property="Background"  Value="#171d25"/>
            <Setter Property="ResizeMode"  Value="NoResize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="Height"      Value="280"/>
            <Setter Property="Width"       Value="300"/>
        </Style>


        <!-- Стиль для Menu 
           1. Используется для меню Профиля
        -->
        <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
            <Setter Property="Foreground"  Value="White"/>
            <Setter Property="Background"  Value="#171d25"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontWeight"  Value="Bold"/>
        </Style>

        <!-- Стиль для MenuItem -->
        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}"> 
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#434953"/>
            <Setter Property="Height"     Value="30"/>
            <Setter Property="FontSize"   Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!-- Стиль для TextBlock -->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="15 0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight"  Value="Bold"/>
        </Style>

        <!-- Стиль для TextBox -->
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#999999"/>
            <Setter Property="Background" Value="#434953"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- Переопределение стандартного стиля MenuItem
           Позаимствовал тут:
           https://stackoverflow.com/questions/4029917/wpf-transparent-menu
        -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
                        Margin="6,3,6,3" 
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Fade">
                        <Border 
                            Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="Gray">
                            <StackPanel  
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#1a3c50"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#26a0da"/>
                    <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="10 15 10 15"/>
                    <Setter TargetName="SubmenuBorder" Property="Background" Value="#6a717c"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#2d333c"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Переопределение стандартного стиля TabItem
           Переопределены только стандартные цвета TabItem.Header
        -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Background="#303b4a" 
                                CornerRadius="5 5 0 0">
                            <ContentPresenter Content="{TemplateBinding Header}" Margin="7"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Foreground" Value="#999999"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Переопределение стандартного стиля DataGrid
           Переопределены:
            1. Цвета всего DataGrid
            2. Переопределен стиль заголовка (DataGridColumnHeader): 
                Фон, цвет текста, вес шрифта, выравнивание, минимальная высота
            3. Переопределены строки таблицы (DataGridRow): 
                Фон, цвет текста, фон при выделении
        -->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#434953"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="AlternatingRowBackground" Value="#434953" />
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#171d25" />
                        <Setter Property="Foreground" Value="#999999" />
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="MinHeight" Value="30" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#434953" />
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
